------------pwd-----------
/home/charisim/Lab05
------------ls-----------
example1
example1.c
example2
example2.c
example3
example3.c
log
------------cd ../Lab1/-----------
------------mkdir new_folder-----------
------------stat example1.c-----------
  File: example1.c
  Size: 485       	Blocks: 8          IO Block: 4096   regular file
Device: 811h/2065d	Inode: 303052      Links: 1
Access: (0664/-rw-rw-r--)  Uid: ( 1312/charisim)   Gid: ( 1314/charisim)
Access: 2024-12-16 11:30:48.850024337 +0200
Modify: 2024-12-16 11:30:44.325997572 +0200
Change: 2024-12-16 11:30:44.325997572 +0200
 Birth: -
------------cp example1.c test.c-----------
------------mv test.c ../test.c-----------
------------rm ../test.c-----------
------------rmdir new_folder-----------
------------rm -r example/-----------
------------find . -name *.txt-----------
./test.txt
------------cat example1.c-----------
#include <stdio.h>

int main(void) {
    int x = 10;      // A normal integer variable
    int *p;          // p is a pointer to an integer

    p = &x;          // p now holds the address of x

    printf("Value of x: %d\n", x);
    printf("Address of x: %p\n", (void*)&x);
    printf("Value of p: %p\n", (void*)p);
    printf("Value pointed to by p: %d\n", *p);

    *p = 20;         // Change the value of x using the pointer
    printf("New value of x: %d\n", x);

    return 0;
}
------------less example1.c-----------
#include <stdio.h>

int main(void) {
    int x = 10;      // A normal integer variable
    int *p;          // p is a pointer to an integer

    p = &x;          // p now holds the address of x

    printf("Value of x: %d\n", x);
    printf("Address of x: %p\n", (void*)&x);
    printf("Value of p: %p\n", (void*)p);
    printf("Value pointed to by p: %d\n", *p);

    *p = 20;         // Change the value of x using the pointer
    printf("New value of x: %d\n", x);

    return 0;
}
------------head example1.c-----------
#include <stdio.h>

int main(void) {
    int x = 10;      // A normal integer variable
    int *p;          // p is a pointer to an integer

    p = &x;          // p now holds the address of x

    printf("Value of x: %d\n", x);
    printf("Address of x: %p\n", (void*)&x);
------------tail example1.c-----------
    printf("Value of x: %d\n", x);
    printf("Address of x: %p\n", (void*)&x);
    printf("Value of p: %p\n", (void*)p);
    printf("Value pointed to by p: %d\n", *p);

    *p = 20;         // Change the value of x using the pointer
    printf("New value of x: %d\n", x);

    return 0;
}
------------tar -czvf lab5.tar.gz .-----------
./
./example2.c
./example4.c
./example5.c
./example3.c
./example1.c
